"""create tables: captcha_problem, captcha_session. captcha_log

Revision ID: c1e1391e28df
Revises: 672a86a81545
Create Date: 2025-08-13 01:42:23.386893

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c1e1391e28df'
down_revision: Union[str, Sequence[str], None] = '672a86a81545'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # 새로운 테이블 생성
    op.create_table('captcha_problem',
                    sa.Column('id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='캡챠 문제 ID'),
                    sa.Column('image_url', sa.TEXT(),
                              nullable=False, comment='S3 이미지 URL'),
                    sa.Column('answer', sa.String(length=20),
                              nullable=False, comment='정답'),
                    sa.Column('worng_answer1', sa.String(length=20),
                              nullable=False, comment='오답1'),
                    sa.Column('worng_answer2', sa.String(length=20),
                              nullable=False, comment='오답2'),
                    sa.Column('worng_answer3', sa.String(length=20),
                              nullable=False, comment='오답3'),
                    sa.Column('prompt', sa.String(length=255),
                              nullable=False, comment='문제 설명'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='문제 생성 시각'),
                    sa.Column('expires_at', sa.DateTime(),
                              nullable=False, comment='문제 교체 시각 (만료일)'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='유저 ID'),
                    sa.Column('email', sa.String(length=255),
                              nullable=False, comment='로그인 이메일'),
                    sa.Column('password_hash', sa.String(length=255),
                              nullable=False, comment='비밀번호 해시'),
                    sa.Column('user_name', sa.String(length=100),
                              nullable=True, comment='사용자 이름'),
                    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'),
                              nullable=False, comment='사용자 권한'),
                    sa.Column('subscription_plan', sa.Enum('FREE', 'STARTER', 'PRO',
                                                           'ENTERPRISE', name='usersubscription'), nullable=False, comment='구독한 플랜'),
                    sa.Column('api_token', sa.Integer(),
                              nullable=False, comment='API 호출 토큰 개수'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='생성 시각'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='수정 시각'),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True,
                              comment='삭제 시각 (soft-delete)'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('application',
                    sa.Column('id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='앱 ID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='사용자 FK'),
                    sa.Column('app_name', sa.String(length=100),
                              nullable=False, comment='앱 이름'),
                    sa.Column('description', sa.Text(),
                              nullable=True, comment='앱 설명'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='생성 시각'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='수정 시각'),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True,
                              comment='삭제 시각 (soft-delete)'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('api_key',
                    sa.Column('id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='키 ID'),
                    sa.Column('user_id', sa.Integer(),
                              nullable=False, comment='키 소유자'),
                    sa.Column('application_id', sa.Integer(),
                              nullable=False, comment='애플리케이션과 1:1'),
                    sa.Column('key', sa.String(length=255),
                              nullable=False, comment='외부 노출용 API 키 문자열'),
                    sa.Column('is_active', sa.Boolean(),
                              nullable=False, comment='키 활성 상태'),
                    sa.Column('expires_at', sa.DateTime(), nullable=True,
                              comment='만료 시각 : 0 >= 무제한, 1=1일, 7=7일, 30=30일 등'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='생성 시각'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='수정 시각'),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True,
                              comment='삭제 시각 (soft-delete)'),
                    sa.ForeignKeyConstraint(['application_id'], [
                        'application.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('application_id'),
                    sa.UniqueConstraint('key')
                    )
    op.create_table('captcha_session',
                    sa.Column('id', sa.Integer(), nullable=False,
                              comment='캡챠 세션 ID'),
                    sa.Column('api_key_id', sa.Integer(),
                              nullable=False, comment='사용된 API 키'),
                    sa.Column('captcha_problem_id', sa.Integer(),
                              nullable=False, comment='랜덤으로 가져온 문제 ID'),
                    sa.Column('client_token', sa.String(length=100),
                              nullable=False, comment='클라이언트에 전달할 고유 토큰 (1회용)'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='생성 시각'),
                    sa.ForeignKeyConstraint(
                        ['api_key_id'], ['api_key.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['captcha_problem_id'], [
                        'captcha_problem.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('client_token')
                    )
    op.create_table('captcha_log',
                    sa.Column('id', sa.Integer(), autoincrement=True,
                              nullable=False, comment='캡챠 로그 ID'),
                    sa.Column('api_key_id', sa.Integer(),
                              nullable=False, comment='사용된 API 키'),
                    sa.Column('session_id', sa.Integer(),
                              nullable=False, comment='연결된 캡챠 세션 ID'),
                    sa.Column('ip_address', sa.String(length=45),
                              nullable=True, comment='요청자 IP'),
                    sa.Column('user_agent', sa.TEXT(),
                              nullable=True, comment='요청자 브라우저 정보'),
                    sa.Column('result', sa.Enum('SUCCESS', 'FAIL',
                                                name='captcharesult'), nullable=False, comment='성공 / 실패 결과'),
                    sa.Column('latency_ms', sa.Integer(),
                              nullable=False, comment='응답 지연 시간 (ms)'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text(
                        'now()'), nullable=False, comment='생성 시각'),
                    sa.ForeignKeyConstraint(['api_key_id'], ['api_key.id'], ),
                    sa.ForeignKeyConstraint(
                        ['session_id'], ['captcha_session.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )

    # 기존 테이블 삭제 (외래키 관계 역순으로)
    op.drop_index('key', table_name='app_api_keys')
    op.drop_table('app_api_keys')

    op.drop_table('user_applications')

    op.drop_index('ix_auth_users_email', table_name='auth_users')
    op.drop_table('auth_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_applications',
                    sa.Column('id', mysql.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', mysql.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('app_name', mysql.VARCHAR(
                        length=100), nullable=False),
                    sa.Column('description', mysql.TEXT(), nullable=True),
                    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('deleted_at', mysql.DATETIME(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['auth_users.id'], name='user_applications_ibfk_1'),
                    sa.PrimaryKeyConstraint('id'),
                    mysql_collate='utf8mb4_0900_ai_ci',
                    mysql_default_charset='utf8mb4',
                    mysql_engine='InnoDB'
                    )
    op.create_table('auth_users',
                    sa.Column('id', mysql.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('email', mysql.VARCHAR(
                        length=255), nullable=False),
                    sa.Column('password_hash', mysql.VARCHAR(
                        length=255), nullable=False),
                    sa.Column('user_name', mysql.VARCHAR(
                        length=100), nullable=True),
                    sa.Column('role', mysql.ENUM(
                        'ADMIN', 'USER'), nullable=False),
                    sa.Column('subscribe', mysql.ENUM('FREE', 'STARTER',
                                                      'PRO', 'ENTERPRISE'), nullable=False),
                    sa.Column('token', mysql.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('deleted_at', mysql.DATETIME(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    mysql_collate='utf8mb4_0900_ai_ci',
                    mysql_default_charset='utf8mb4',
                    mysql_engine='InnoDB'
                    )
    op.create_index('ix_auth_users_email', 'auth_users',
                    ['email'], unique=True)
    op.create_table('app_api_keys',
                    sa.Column('id', mysql.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', mysql.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('application_id', mysql.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('key', mysql.VARCHAR(
                        length=255), nullable=False),
                    sa.Column('is_active', mysql.TINYINT(display_width=1),
                              autoincrement=False, nullable=False),
                    sa.Column('expires_at', mysql.DATETIME(), nullable=True),
                    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('deleted_at', mysql.DATETIME(), nullable=True),
                    sa.ForeignKeyConstraint(['application_id'], [
                        'user_applications.id'], name='app_api_keys_ibfk_1'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['auth_users.id'], name='app_api_keys_ibfk_2'),
                    sa.PrimaryKeyConstraint('id'),
                    mysql_collate='utf8mb4_0900_ai_ci',
                    mysql_default_charset='utf8mb4',
                    mysql_engine='InnoDB'
                    )
    op.create_index('key', 'app_api_keys', ['key'], unique=True)
    op.drop_table('captcha_log')
    op.drop_table('captcha_session')
    op.drop_table('api_key')
    op.drop_table('application')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('captcha_problem')
    # ### end Alembic commands ###
