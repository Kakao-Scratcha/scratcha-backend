"""Change expires_at to TIMESTAMP for app_api_keys Table

Revision ID: cf001b721887
Revises: b269b48aa5eb
Create Date: 2025-08-04 04:31:21.228751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'cf001b721887'
down_revision: Union[str, Sequence[str], None] = 'b269b48aa5eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 기존 expires_at 컬럼의 0 값을 NULL로 업데이트하여 TIMESTAMP 타입으로의 변환 오류 방지
    op.execute("UPDATE app_api_keys SET expires_at = NULL WHERE expires_at = 0")
    op.alter_column('app_api_keys', 'expires_at',
               existing_type=mysql.INTEGER(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user_applications', 'description',
               existing_type=mysql.TEXT(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_applications', 'description',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('app_api_keys', 'expires_at',
               existing_type=sa.TIMESTAMP(),
               type_=mysql.INTEGER(),
               existing_nullable=True)
    # ### end Alembic commands ###
